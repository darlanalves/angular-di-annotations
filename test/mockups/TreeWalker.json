{
	"type": "Program",
	"body": [
		{
			"type": "ExpressionStatement",
			"expression": {
				"type": "CallExpression",
				"callee": {
					"type": "FunctionExpression",
					"id": null,
					"params": [],
					"defaults": [],
					"body": {
						"type": "BlockStatement",
						"body": [
							{
								"type": "FunctionDeclaration",
								"id": {
									"type": "Identifier",
									"name": "doubleFilter",
									"leadingComments": [
										{
											"type": "Block",
											"value": "*\n\t * @module foo-module\n\t * @requires bar, baz, some-other-stuff\n\t "
										},
										{
											"type": "Block",
											"value": "*\n\t * @filter double\n\t "
										}
									]
								},
								"params": [
									{
										"type": "Identifier",
										"name": "Foo"
									},
									{
										"type": "Identifier",
										"name": "Bar"
									}
								],
								"defaults": [],
								"body": {
									"type": "BlockStatement",
									"body": [
										{
											"type": "ReturnStatement",
											"argument": {
												"type": "FunctionExpression",
												"id": {
													"type": "Identifier",
													"name": "double"
												},
												"params": [
													{
														"type": "Identifier",
														"name": "number"
													}
												],
												"defaults": [],
												"body": {
													"type": "BlockStatement",
													"body": [
														{
															"type": "ReturnStatement",
															"argument": {
																"type": "BinaryExpression",
																"operator": "*",
																"left": {
																	"type": "Identifier",
																	"name": "number"
																},
																"right": {
																	"type": "Literal",
																	"value": 2,
																	"raw": "2"
																}
															}
														}
													]
												},
												"generator": false,
												"expression": false
											}
										}
									]
								},
								"generator": false,
								"expression": false,
								"trailingComments": [
									{
										"type": "Block",
										"value": "*\n\t * @directive sample\n\t "
									}
								]
							},
							{
								"type": "FunctionDeclaration",
								"id": {
									"type": "Identifier",
									"name": "sampleDirective",
									"leadingComments": [
										{
											"type": "Block",
											"value": "*\n\t * @directive sample\n\t "
										}
									]
								},
								"params": [
									{
										"type": "Identifier",
										"name": "$compile"
									}
								],
								"defaults": [],
								"body": {
									"type": "BlockStatement",
									"body": [
										{
											"type": "ReturnStatement",
											"argument": {
												"type": "ObjectExpression",
												"properties": [
													{
														"type": "Property",
														"key": {
															"type": "Identifier",
															"name": "restrict"
														},
														"value": {
															"type": "Literal",
															"value": "E",
															"raw": "'E'"
														},
														"kind": "init",
														"leadingComments": [
															{
																"type": "Block",
																"value": "*\n\t\t * Foo Whoo\n\t\t "
															}
														]
													},
													{
														"type": "Property",
														"key": {
															"type": "Identifier",
															"name": "templateUrl"
														},
														"value": {
															"type": "Literal",
															"value": "sample.html",
															"raw": "'sample.html'"
														},
														"kind": "init"
													},
													{
														"type": "Property",
														"key": {
															"type": "Identifier",
															"name": "link"
														},
														"value": {
															"type": "Identifier",
															"name": "linker"
														},
														"kind": "init"
													}
												]
											}
										},
										{
											"type": "FunctionDeclaration",
											"id": {
												"type": "Identifier",
												"name": "linker"
											},
											"params": [],
											"defaults": [],
											"body": {
												"type": "BlockStatement",
												"body": [
													{
														"type": "ExpressionStatement",
														"expression": {
															"type": "CallExpression",
															"callee": {
																"type": "Identifier",
																"name": "$compile"
															},
															"arguments": [
																{
																	"type": "Literal",
																	"value": "<div />",
																	"raw": "'<div />'"
																}
															]
														}
													}
												]
											},
											"generator": false,
											"expression": false
										}
									]
								},
								"generator": false,
								"expression": false,
								"trailingComments": [
									{
										"type": "Block",
										"value": "*\n\t * @service DomainService\n\t "
									}
								]
							},
							{
								"type": "FunctionDeclaration",
								"id": {
									"type": "Identifier",
									"name": "DomainService",
									"leadingComments": [
										{
											"type": "Block",
											"value": "*\n\t * @service DomainService\n\t "
										}
									]
								},
								"params": [
									{
										"type": "Identifier",
										"name": "$http"
									},
									{
										"type": "Identifier",
										"name": "$q"
									},
									{
										"type": "Identifier",
										"name": "CONST_ONE"
									}
								],
								"defaults": [],
								"body": {
									"type": "BlockStatement",
									"body": [
										{
											"type": "FunctionDeclaration",
											"id": {
												"type": "Identifier",
												"name": "findOne"
											},
											"params": [
												{
													"type": "Identifier",
													"name": "id"
												}
											],
											"defaults": [],
											"body": {
												"type": "BlockStatement",
												"body": []
											},
											"generator": false,
											"expression": false,
											"leadingComments": [
												{
													"type": "Block",
													"value": "*\n\t\t * Find one item\n\t\t * @param {String} id Item to search for\n\t\t "
												}
											]
										},
										{
											"type": "ReturnStatement",
											"argument": {
												"type": "ObjectExpression",
												"properties": [
													{
														"type": "Property",
														"key": {
															"type": "Identifier",
															"name": "findOne"
														},
														"value": {
															"type": "Identifier",
															"name": "findOne"
														},
														"kind": "init"
													}
												]
											}
										}
									]
								},
								"generator": false,
								"expression": false,
								"trailingComments": [
									{
										"type": "Line",
										"value": " @value"
									}
								]
							},
							{
								"type": "VariableDeclaration",
								"declarations": [
									{
										"type": "VariableDeclarator",
										"id": {
											"type": "Identifier",
											"name": "someValue"
										},
										"init": {
											"type": "Literal",
											"value": 10,
											"raw": "10"
										}
									}
								],
								"kind": "var",
								"leadingComments": [
									{
										"type": "Line",
										"value": " @value"
									}
								],
								"trailingComments": [
									{
										"type": "Line",
										"value": " @const"
									}
								]
							},
							{
								"type": "VariableDeclaration",
								"declarations": [
									{
										"type": "VariableDeclarator",
										"id": {
											"type": "Identifier",
											"name": "CONST_ONE"
										},
										"init": {
											"type": "Literal",
											"value": "one",
											"raw": "'one'"
										}
									}
								],
								"kind": "var",
								"leadingComments": [
									{
										"type": "Line",
										"value": " @const"
									}
								],
								"trailingComments": [
									{
										"type": "Block",
										"value": "*\n\t * @controller FooEditController\n\t "
									}
								]
							},
							{
								"type": "FunctionDeclaration",
								"id": {
									"type": "Identifier",
									"name": "FooEditController",
									"leadingComments": [
										{
											"type": "Block",
											"value": "*\n\t * @controller FooEditController\n\t "
										}
									]
								},
								"params": [
									{
										"type": "Identifier",
										"name": "$scope"
									},
									{
										"type": "Identifier",
										"name": "$http"
									},
									{
										"type": "Identifier",
										"name": "DomainService"
									}
								],
								"defaults": [],
								"body": {
									"type": "BlockStatement",
									"body": [
										{
											"type": "ExpressionStatement",
											"expression": {
												"type": "AssignmentExpression",
												"operator": "=",
												"left": {
													"type": "MemberExpression",
													"computed": false,
													"object": {
														"type": "Identifier",
														"name": "$scope"
													},
													"property": {
														"type": "Identifier",
														"name": "save"
													}
												},
												"right": {
													"type": "Identifier",
													"name": "saveItem"
												}
											},
											"trailingComments": [
												{
													"type": "Line",
													"value": " saves the item on scope"
												}
											]
										},
										{
											"type": "FunctionDeclaration",
											"id": {
												"type": "Identifier",
												"name": "saveItem"
											},
											"params": [],
											"defaults": [],
											"body": {
												"type": "BlockStatement",
												"body": []
											},
											"generator": false,
											"expression": false,
											"leadingComments": [
												{
													"type": "Line",
													"value": " saves the item on scope"
												}
											]
										}
									]
								},
								"generator": false,
								"expression": false
							}
						]
					},
					"generator": false,
					"expression": false
				},
				"arguments": []
			}
		}
	],
	"comments": [
		{
			"type": "Block",
			"value": "*\n\t * @module foo-module\n\t * @requires bar, baz, some-other-stuff\n\t "
		},
		{
			"type": "Block",
			"value": "*\n\t * @filter double\n\t "
		},
		{
			"type": "Block",
			"value": "*\n\t * @directive sample\n\t "
		},
		{
			"type": "Block",
			"value": "*\n\t\t * Foo Whoo\n\t\t "
		},
		{
			"type": "Block",
			"value": "*\n\t * @service DomainService\n\t "
		},
		{
			"type": "Block",
			"value": "*\n\t\t * Find one item\n\t\t * @param {String} id Item to search for\n\t\t "
		},
		{
			"type": "Line",
			"value": " @value"
		},
		{
			"type": "Line",
			"value": " @const"
		},
		{
			"type": "Block",
			"value": "*\n\t * @controller FooEditController\n\t "
		},
		{
			"type": "Line",
			"value": " saves the item on scope"
		},
		{
			"type": "Line",
			"value": " here's some code for that"
		}
	]
}